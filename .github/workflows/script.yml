name: Fetch Page

on:
  schedule:
    # 每 10 分钟运行一次
    - cron: '*/10 * * * *'
  workflow_dispatch: # 允许手动触发

jobs:
  run-script:
    runs-on: ubuntu-latest
    permissions:
      contents: write # 给予写入仓库内容的权限

    steps:
      - name: 检查代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: 设置 Python 环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # 指定您需要的 Python 版本

      - name: 安装依赖项
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 运行 Python 脚本
        id: run_script
        run: python fetch_page.py

      - name: 检查文件是否有更改
        id: git_status
        run: |
          if git diff --quiet --exit-code -- data.json; then
            echo "modified=false" >> $GITHUB_OUTPUT
            echo "data.json 没有修改。"
          else
            echo "modified=true" >> $GITHUB_OUTPUT
            echo "data.json 已被修改。"
          fi
        shell: bash

      - name: 提交并推送更改
        if: steps.git_status.outputs.modified == 'true'
        run: |
          git config user.name 'mai19950'
          git config user.email 'underdog-95@outlook.com'
          export TZ='Asia/Shanghai'
          TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S")
          git add .
          UPDATED_PAGES="${{ steps.run_script.outputs.updated_pages }}"
          if [ -z "$UPDATED_PAGES" ]; then
            COMMIT_MSG="Automated: Update data.json at ${TIMESTAMP}"
          else
            COMMIT_MSG="Automated: Update data.json [${UPDATED_PAGES}] at ${TIMESTAMP}"
          fi
          git commit -m "${COMMIT_MSG}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}